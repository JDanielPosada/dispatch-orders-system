
@using DispatchOrderSystem.Web.Models.Orders
@model CreateOrderViewModel

@{
    ViewData["Title"] = "Crear Orden";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow rounded">
                <div class="card-header bg-primary text-white" style="background-color: #033e5c !important;">
                    <h4 class="mb-0">Nueva Orden de Despacho</h4>
                </div>
                <div class="card-body">
                    <form id="orderForm" asp-action="Create" method="post" novalidate>
                        <div class="mb-3">
                            <label asp-for="ClientId" class="form-label">Cliente</label>
                            <select asp-for="ClientId" class="form-select" asp-items="@(new SelectList(Model.Clients, "Id", "Name"))">
                                <option value="">-- Selecciona --</option>
                            </select>
                            <span asp-validation-for="ClientId" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="ProductId" class="form-label">Producto</label>
                            <select asp-for="ProductId" class="form-select" asp-items="@(new SelectList(Model.Products, "Id", "Name"))">
                                <option value="">-- Selecciona --</option>
                            </select>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Quantity" class="form-label">Cantidad</label>
                            <input asp-for="Quantity" class="form-control" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Origen - Latitud</label>
                                <input asp-for="OriginLatitude" type="number" step="any" class="form-control" placeholder="Latitud origen" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Origen - Longitud</label>
                                <input asp-for="OriginLongitude" type="number" step="any" class="form-control" placeholder="Longitud origen" />
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Destino - Latitud</label>
                                <input asp-for="DestinationLatitude" type="number" step="any" class="form-control" placeholder="Latitud destino" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Destino - Longitud</label>
                                <input asp-for="DestinationLongitude" type="number" step="any" class="form-control" placeholder="Longitud destino" />
                            </div>
                        </div>

                        <div class="card shadow-sm mb-4">
                            <div class="card-header bg-light text-dark fw-bold">
                                Selección en Mapa
                            </div>
                            <div class="card-body p-3">
                                <p class="text-muted mb-2">
                                    Da clic en el mapa para establecer el origen y el destino de la orden.
                                </p>
                                <div id="map"
                                     style="height: 300px; border-radius: 10px; overflow: hidden; border: 1px solid #ccc;"></div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end d-flex gap-2">
                            <a asp-action="Index" class="btn btn-outline-secondary ms-2">Cancelar</a>
                            <button type="submit" class="btn text-white" style="background-color: #033e5c;">Crear Orden</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation-unobtrusive@3.2.12/dist/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(function () {
            $('#orderForm').on('submit', function (e) {
                var form = $(this);

                if (!form.valid()) {
                    // Si la validación falla, NO mostrar el spinner ni bloquear el botón
                    return false;
                }

                // Si pasa validación, mostramos spinner y desactivamos botón
                $('#submitBtn').prop('disabled', true);
                $('#submitText').addClass('d-none');
                $('#spinner').removeClass('d-none');
            });
        });
    </script>

    <script>
        let map = L.map('map').setView([2.4448, -76.6147], 7); // Centrado en Popayán

        // Capa base
        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://carto.com/">CARTO</a>',
        }).addTo(map);

        let originMarker = null;
        let destinationMarker = null;

        // Evento clic
        let step = 1;

        map.on('click', function (e) {
            const { lat, lng } = e.latlng;

            if (step === 1) {
                if (originMarker) map.removeLayer(originMarker);
                originMarker = L.marker([lat, lng], { draggable: true }).addTo(map)
                    .bindPopup('Origen').openPopup();
                $('#OriginLatitude').val(lat.toFixed(6));
                $('#OriginLongitude').val(lng.toFixed(6));
                step = 2;

                originMarker.on('dragend', function (e) {
                    const pos = e.target.getLatLng();
                    $('#OriginLatitude').val(pos.lat.toFixed(6));
                    $('#OriginLongitude').val(pos.lng.toFixed(6));
                });

            } else if (step === 2) {
                if (destinationMarker) map.removeLayer(destinationMarker);
                destinationMarker = L.marker([lat, lng], { draggable: true, icon: L.icon({
                    iconUrl: 'https://cdn-icons-png.flaticon.com/512/684/684908.png',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41],
                    popupAnchor: [1, -34],
                }) }).addTo(map).bindPopup('Destino').openPopup();
                $('#DestinationLatitude').val(lat.toFixed(6));
                $('#DestinationLongitude').val(lng.toFixed(6));
                step = 1;

                destinationMarker.on('dragend', function (e) {
                    const pos = e.target.getLatLng();
                    $('#DestinationLatitude').val(pos.lat.toFixed(6));
                    $('#DestinationLongitude').val(pos.lng.toFixed(6));
                });
            }
        });
    </script>
}
<style>
    #map {
        transition: box-shadow 0.3s ease;
    }

        #map:hover {
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

    .leaflet-control-container .leaflet-control-attribution {
        font-size: 0.75rem;
    }
</style>